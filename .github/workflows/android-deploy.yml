name: Build and Deploy Android App

on:
  push:
    branches: [master]
    tags: ['v*']
  pull_request:
    branches: [master]

env:
  JAVA_VERSION: '22'
  NODE_VERSION: '22'

jobs:
  build-web:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Build web app
        run: npm run build

      - name: Upload web build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: dist/
          retention-days: 1

  build-android:
    needs: build-web
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Download web build artifacts
        uses: actions/download-artifact@v4
        with:
          name: web-build
          path: dist/

      - name: Install dependencies
        run: npm ci

      - name: Add Android platform
        run: npx cap add android

      - name: Create keystore.properties
        run: |
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" > android/app/keystore.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/app/keystore.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/app/keystore.properties
          echo "storeFile=../upload-keystore.jks" >> android/app/keystore.properties

      - name: Create upload keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/upload-keystore.jks

      - name: Sync Capacitor
        run: npx cap sync android

      - name: Build Android AAB
        run: |
          cd android
          # Force Java 22 compatibility in gradle.properties
          echo "org.gradle.java.home=$JAVA_HOME" >> gradle.properties
          echo "android.defaults.buildfeatures.buildconfig=true" >> gradle.properties
          echo "android.nonTransitiveRClass=false" >> gradle.properties
          # Add Java 22 compatibility to app build.gradle
          sed -i '/namespace "dev.maximepzv.poker"/a\\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_22\n        targetCompatibility JavaVersion.VERSION_22\n    }' app/build.gradle
          # Add signing config to release build type
          sed -i '/buildTypes {/a\\        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"\n            signingConfig signingConfigs.release\n        }' app/build.gradle
          # Add signing configs at the beginning of android block
          sed -i '/android {/a\\    signingConfigs {\n        release {\n            storeFile file("../upload-keystore.jks")\n            storePassword System.getenv("ANDROID_KEYSTORE_PASSWORD")\n            keyAlias System.getenv("ANDROID_KEY_ALIAS")\n            keyPassword System.getenv("ANDROID_KEY_PASSWORD")\n        }\n    }' app/build.gradle
          ./gradlew bundleRelease

      - name: Generate Changelog
        run: |
          mkdir -p fastlane/metadata/android/en-US/changelogs
          
          # Extract version number from tag (ex: v1.0.1 -> 1.0.1)
          VERSION=${GITHUB_REF#refs/tags/v}
          TIMESTAMP=$(date +%s)
          CHANGELOG_FILE="fastlane/metadata/android/en-US/changelogs/${TIMESTAMP}.txt"
          
          # Generate changelog based on commits since last tag
          echo "ðŸš€ Version ${VERSION} - $(date '+%d/%m/%Y')" > ${CHANGELOG_FILE}
          echo "" >> ${CHANGELOG_FILE}
          
          # Get commits since last tag
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -n "$LAST_TAG" ]; then
            echo "ðŸ“‹ Changes since ${LAST_TAG}:" >> ${CHANGELOG_FILE}
            echo "" >> ${CHANGELOG_FILE}
            git log ${LAST_TAG}..HEAD --pretty=format:"â€¢ %s" --no-merges >> ${CHANGELOG_FILE}
          else
            echo "ðŸŽ‰ First release!" >> ${CHANGELOG_FILE}
            echo "" >> ${CHANGELOG_FILE}
            echo "â€¢ Poker Timer application" >> ${CHANGELOG_FILE}
            echo "â€¢ Intuitive user interface" >> ${CHANGELOG_FILE}
            echo "â€¢ Poker rounds management" >> ${CHANGELOG_FILE}
            echo "â€¢ Timer with sound alerts" >> ${CHANGELOG_FILE}
          fi

      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-aab
          path: android/app/build/outputs/bundle/release/app-release.aab
          retention-days: 30

      - name: Deploy to Google Play Internal Testing
        if: startsWith(github.ref, 'refs/tags/v')
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
          packageName: dev.maximepzv.poker
          releaseFiles: android/app/build/outputs/bundle/release/app-release.aab
          track: internal
          status: completed
          inAppUpdatePriority: 2
          whatsNewDirectory: fastlane/metadata/android/en-US/changelogs